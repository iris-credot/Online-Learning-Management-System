
  {
    "swagger":"2.0",
    "info":{
        "title":"Learning Management System API",
        "description":"API documentation for Authentication Project",
        "version":"1.0.0"
    },
    "schemes":["http","https"],
     "securityDefinitions":{
     "Bearer":{
      "type":"apiKey",
      "name":"Authorization",
      "in":"header",
      "description":"Enter the token for authorization"
     }
     },
    "paths":{
      "/api/user/signup":{
      "post":{
        "summary": "Register a new user",
        "description":"Create a new user and add it to the database",
        "tags":["Authentication"],
        "parameters":[{
          "name":"body",
          "in":"body",
          "description":"User details",
          "required":"true",
          "schema":{
              "type":"object",
              "properties":{
                "username":{
                  "type": "string",
                  "required": [true,"Please provide your username first"]
               },
                    "name":{
                     "type": "string",
                     "required": [true,"Please provide email first"]
                  },
                
                  "email":{
                  "type": "string",
                  "required": [true,"Please provide email first"],
                  "unique": "true",
                  "lowercase": "true",
                  "validate":["isEmail","Please provide a valid email"]
                  },
                 "password":{
                  "type": "string",
                  "required": [true,"Please provide email first"],
                  "minLength": [6,"Must be at least 6 characters"]
                  }
                  
                    
              }
          }
      }],
      "responses":{
        "201": {
            "description": "User created"
          },
          "403": {
            "description": "A User with this email already exists."
          },
          "500": {
            "description": "There was an error processing your request. Please try again later."
          } 
    }
      }},
    "/api/user/login":{
      "post":{
        "summary":"Login a new user",
       "description":"Login a new user and add it to the database",
       "tags":["Authentication"],
       "parameters":[{
           "name":"body",
           "in":"body",
           "description":"User details",
           "required":"true",
           "schema":{
               "type":"object",
               "properties":{
                   "email":{
                  "type": "string",
                   "required": [true,"Please provide email first"],
                   "unique": "true",
                   "lowercase": "true",
                   "validate":["isEmail","Please provide a valid email"]
                   },
                  "password":{
                   "type": "string",
                   "required": [true,"Please provide password first"],
                   "minLength": [6,"Must be at least 6 characters"]
                   }
                     
               }
           }
       }],
       "responses":{
           "201": {
               "description": "User created"
             },
             "409": {
               "description": "A User with this email already exists."
             },
             "503": {
               "description": "There was an error processing your request. Please try again later."
             } 
       }
      }},
    "/api/user/logout":{
      "get":{
        "summary": "Log out a user",
        "description": "End the user session.",
        "tags":["Users"],
        "security":[
          {
        "Bearer":[]
           }
],
        "responses": {
          "200": {
            "description": "Logout successful."
          },
          "400": {
            "description": "Bad request."
          }
          }
    }},
    "/api/user/forgot":{
      "post":{
        "summary": "Request forgot password",
        "description": "Forgot Password.",
        "tags":["Authentication"],
        "parameters":[{
          "name":"body",
          "in":"body",
          "description":"User email if forgot password",
          "required":"true",
          "schema":{
              "type":"object",
              "properties":{
                  "email":{
                 "type": "string",
                  "required": [true,"Please provide email first"],
                  "unique": "true",
                  "lowercase": "true",
                  "validate":["isEmail","Please provide a valid email"]
                  }
                  
                    
              }
          }
      }],
      "responses": {
        "200": {
          "description": "Password reset link sent."
        },
        "400": {
          "description": "Bad request."
        }
      }
      }},
   "/api/user/resetpassword":{
      "post":{
        "summary": "Reset password",
        "tags":["Authentication"],
        "parameters":[{
          "name":"body",
          "in":"body",
          "description":"User details",
          "required":"true",
          "schema":{
              "type":"object",
              "properties":{
                  "email":{
                 "type": "string",
                  "required": [true,"Please provide email first"],
                  "unique": "true",
                  "lowercase": "true",
                  "validate":["isEmail","Please provide a valid email"]
                  },
                 "newPassword":{
                  "type": "string",
                  "required": [true,"Please provide password first"],
                  "minLength": [6,"Must be at least 6 characters"]
                  },
                  "token":{
                    "type": "string",
                    "required": [true,"Please provide token first"]
                   
                    }
                    
              }
          }
      }],
              "responses": {
                "200": {
                  "description": "Password reset successful."
                },
                "400": {
                  "description": "Bad request."
                }
              }
      }},
    "/api/user/all":{
      "get":{
      "summary":"Get all users",
      "description":"All users",
      "tags":["Users"],
      "security":[
        {
      "Bearer":[]
         }
],
      "responses":{
          "200":{
              "description":"A list of all users"
          },
          "400":{
              "description":"OPPS......Something went wrong"
          }  
      }
    }},
    "/api/user/getOne/{id}":{
      "get":{
        "summary": "Get a user by ID",
        "description": "Get a user by ID",
        "tags": ["Users"],
        "security":[
          {
        "Bearer":[]
           }
],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful, user found"
          },
          "404": {
            "description": "User not found"
          }
        }
    }},
    "/api/user/findByname":{
      "get":{
        "summary": "Get a user by name",
        "description": "Get a user by name",
        "tags": ["Users"],
        "security":[
          {
        "Bearer":[]
           }
],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name of the user to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful, user found"
          },
          "404": {
            "description": "User not found"
          }
        }
    }},
    "/api/user/findByRole":{
     "get":{
      "summary": "Get a user by role",
      "description": "Get a user by role",
      "tags": ["Users"],
      "security":[
        {
      "Bearer":[]
         }
],
      "parameters": [
        {
          "name": "role",
          "in": "query",
          "description": "Role of the user to retrieve",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful, user found"
        },
        "404": {
          "description": "User not found"
        }
      }
     }},
    "/api/user/delete/{id}":{
      "delete":{
        "summary": "Delete a user by ID",
        "description": "Delete a user by ID",
        "tags": ["Users"],
        "security":[
          {
        "Bearer":[]
           }
],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to be delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
    }},
    "/api/user/put/{id}":{
      "put":{
        "summary":"Update a user by ID",
      "description":"Update an existing user in the database",
      "tags":["Users"],
      "security":[
        {
      "Bearer":[]
         }
],
      "parameters":[{
         "name":"id",
         "in":"path",
         "description":"ID of the user to update",
         "required":"true",
         "type":"string"
         },
         {
             "name": "body",
             "in": "body",
             "description": "User details",
             "required": true,
             "schema": {
               "type": "object",
               "properties": {
                "username":{
                  "type": "string",
                  "required": [true,"Please provide your username first"]
               },
                    "name":{
                     "type": "string",
                     "required": [true,"Please provide email first"]
                  },
                  "profile": {
                    "names": { "type": "String" },
                    "bio": { "type": "String" },
                    "avatar": { "type": "String" }
                },
                  "role": {
                    "type": "String",
                    "enum": ["student", "admin"],
                    "default": "student"
                },
                 "otpExpires":{"type":"String"},
                 "otp":{"type":"String", "required": [true,"Please provide email first"]},
                 "verified":{"type":"Boolean","default":false },
                  "email":{
                  "type": "string",
                  "required": [true,"Please provide email first"],
                  "unique": "true",
                  "lowercase": "true",
                  "validate":["isEmail","Please provide a valid email"]
                  },
                 "password":{
                  "type": "string",
                  "required": [true,"Please provide email first"],
                  "minLength": [6,"Must be at least 6 characters"]
                  },
                  "last_login": { "type": "Date" }
                    
                    
               }
             }
           }
      ],
      "responses":{
         "200": {
             "description": "User updated successfully"
           },
           "404": {
             "description": "User not found"
           }
      }
    }},
    "/api/user/update/{id}":{
      "put":{
        "summary": "Update user's password (Authenticated user)",
        "tags":["Users"],
        "security":[
          {
        "Bearer":[]
           }
],
        "parameters":[{
          "name":"id",
          "in":"path",
          "description":"ID of the user to update",
          "required":"true",
          "type":"string"
          },
          {
              "name": "body",
              "in": "body",
              "description": "User details",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                 "username":{
                   "type": "string",
                   "required": [true,"Please provide your username first"]
                },
                     "newPassword":{
                      "type": "string",
                      "required": [true,"Please provide email first"],
                      "minLength": [6,"Must be at least 6 characters"]
                     },
                   
                  "currentPassword":{
                   "type": "string",
                   "required": [true,"Please provide email first"],
                   "minLength": [6,"Must be at least 6 characters"]
                   }
                     
                     
                }
              }
            }
       ],
              "responses":{
                "200": {
                    "description": "User's password updated successfully"
                  },
                  "404": {
                    "description": "User not found"
                  }
             }
      }},
    "/api/user/verifyotp":{
      "post":{
        "summary": "Verify OTP for account verification",
        "tags":["Authentication"],
        "parameters":[{
          "name":"body",
          "in":"body",
          "description":"User details",
          "required":"true",
          "schema":{
            "type":"object",
            "properties":{
                "otp":{
               "type": "string",
                "required": [true,"Please provide otp"]
                }                    
            }
        }
    }],
              "responses":{
                "200": {
                    "description": "User's password updated successfully"
                  },
                  "404": {
                    "description": "User not found"
                  }
             }
      }},
      
 "/api/course/all":{
  "get":{
      "summary":"Get all courses",
      "description":"All coursess",
      "tags":["Courses"],
      "security":[
                {
              "Bearer":[]
                 }
      ],
      "responses":{
          "200":{
              "description":"A list of all courses"
          },
          "400":{
              "description":"OPPS......Something went wrong"
          }  
      }
 }},
 "/api/course/getone/{id}":{
  "get":{
      "summary": "Get a course by ID",
      "description": "Get a course by ID",
      "tags": ["Courses"],
      "security":[
        {
      "Bearer":[]
         }
],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of the course to retrieve",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response"
        },
        "404": {
          "description": "Course not found"
        }
      }
  }},
  "/api/course/delete/{id}":{
  "delete":{
    "summary": "Delete a course by ID",
    "description": "Delete a course by ID",
    "tags": ["Courses"],
    "security":[
      {
    "Bearer":[]
       }
],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "ID of the course to be delete",
        "required": true,
        "type": "string"
      }
    ],
    "responses": {
      "204": {
        "description": "Course deleted"
      },
      "404": {
        "description": "User not found"
      }}
  }},
  "/api/course/create":{
    "post":{
      "summary": "Register a new course",
      "description":"Create a new course and add it to the database",
      "tags":["Courses"],
      "security":[
        {
      "Bearer":[]
         }
],
      "parameters":[{
        "name":"body",
        "in":"body",
        "description":"course details",
        "required":"true",
        "schema":{
            "type":"object",
            "properties":{
              "title":{
                "type": "string",
                "required": [true,"Please provide title first"]
             },
             "description":{
                    "type": "string",
                    "required": [true,"Please provide description first"]
                },
                "category": {
                  "type": "string",
                "required": [true,"Please provide category first"]
              },
             
              "creator":{
                "type": "string",
                "description": "The ObjectId of the user who created the course",
                "required": [true,"Please provide category first"]
              }
                  
            }
        }
    }],
    "responses":{
      "201": {
          "description": "course created"
        },
        "403": {
          "description": "A User with this email already exists."
        },
        "500": {
          "description": "There was an error processing your request. Please try again later."
        } 
  }
    }},
    "/api/course/update/{id}":{
      "put":{
        "summary":"Update a course by ID",
        "description":"Update an existing course in the database",
        "tags":["Courses"],
        "security":[
          {
        "Bearer":[]
           }
],
        "parameters":[{
           "name":"id",
           "in":"path",
           "description":"ID of the Course to update",
           "required":"true",
           "type":"string"
           },
           {
               "name": "body",
               "in": "body",
               "description": "Course details",
               "required": true,
               "schema": {
                 "type": "object",
                 "properties": {
                  "title":{
                    "type": "string",
                    "required": [true,"Please provide title first"]
                 },
                 "description":{
                        "type": "string",
                        "required": [true,"Please provide description first"]
                    },
                    "category": {
                      "type": "string",
                    "required": [true,"Please provide category first"]
                  },
                 
                  "creator":{
                    "type": "string",
                    "description": "The ObjectId of the user who created the course",
                    "required": [true,"Please provide category first"]
                  }
                      
                      
                 }
               }
             }
        ],
        "responses":{
           "200": {
               "description": "Course updated successfully"
             },
             "404": {
               "description": "Course not found"
             }
        }
      }},

      "/api/announce/all":{
        "get":{
            "summary":"Get all announcements",
            "description":"All announcements",
            "tags":["Announcements"],
            "security":[
              {
            "Bearer":[]
               }
    ],
            "responses":{
                "200":{
                    "description":"A list of all announcements"
                },
                "400":{
                    "description":"OPPS......Something went wrong"
                }  
            }
       }},
       "/api/announce/getOne/{id}":{
        "get":{
            "summary": "Get an announcement by ID",
            "description": "Get an announcementby ID",
            "tags": ["Announcements"],
            "security":[
              {
            "Bearer":[]
               }
    ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "ID of the announcement to retrieve",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Successful response"
              },
              "404": {
                "description": "Course not found"
              }
            }
        }},
        "/api/announce/delete/{id}":{
          "delete":{
            "summary": "Delete an announcement by ID",
            "description": "Delete an announcement by ID",
            "tags": ["Announcements"],
            "security":[
              {
            "Bearer":[]
               }
    ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "ID of the announcement to be delete",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "204": {
                "description": "announcement deleted"
              },
              "404": {
                "description": "User not found"
              }}
          }},
          "/api/announce/create":{
            "post":{
              "summary": "Create a new announcement",
              "description":"Create a new announcementand add it to the database",
              "tags":["Announcements"],
              "security":[
                {
              "Bearer":[]
                 }
      ],
              "parameters":[{
                "name":"body",
                "in":"body",
                "description":"announcement details",
                "required":"true",
                "schema":{
                    "type":"object",
                    "properties":{
                      "title": {
                        "type": "string",
                        "description": "The title of the announcement",
                        "required": true
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the announcement",
                        "required": true
                      },
                      "author": {
                        "type": "string",
                        "description": "The ObjectId of the user who created the announcement",
                        "required": true
                      },
                      "target_course": {
                        "type": "string",
                        "description": "The ObjectId of the target course for the announcement (optional)"
                      },
                      "target_all_users": {
                        "type": "boolean",
                        "description": "Indicates whether the announcement is targeted to all users (default: false)"
                      }
                          
                    }
                }
            }],
            "responses":{
              "201": {
                  "description": "announcement created"
                },
                "403": {
                  "description": "An announcementwith this email already exists."
                },
                "500": {
                  "description": "There was an error processing your request. Please try again later."
                } 
          }
            }},
            "/api/announce/put/{id}":{
              "put":{
                "summary": "Update a new announcement",
                "description":"Update a new announcementand add it to the database",
                "tags":["Announcements"],
                "security":[
                  {
                "Bearer":[]
                   }
        ],
                "parameters":[{
                  "name":"id",
                  "in":"path",
                  "description":"ID of the announcement to update",
                  "required":"true",
                  "type":"string"
                  },
                  {
                      "name": "body",
                      "in": "body",
                      "description": "Announcement details",
                      "required": true,
                      "schema": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The title of the announcement",
                            "required": true
                          },
                          "content": {
                            "type": "string",
                            "description": "The content of the announcement",
                            "required": true
                          },
                          "author": {
                            "type": "string",
                            "description": "The ObjectId of the user who created the announcement",
                            "required": true
                          },
                          "target_course": {
                            "type": "string",
                            "description": "The ObjectId of the target course for the announcement (optional)"
                          },
                          "target_all_users": {
                            "type": "boolean",
                            "description": "Indicates whether the announcement is targeted to all users (default: false)"
                          }
                             
                             
                        }
                      }
                    }
               ],
              "responses":{
                "201": {
                    "description": "announcement Updated"
                  },
                  "403": {
                    "description": "An announcementwith this email already exists."
                  },
                  "500": {
                    "description": "There was an error processing your request. Please try again later."
                  } 
            }
              }},


              "/api/disc/create":{
                "post":{
                  "summary": "Create a new discussion",
                  "description":"Create a new discussion and add it to the database",
                  "tags":[" Discussions"],
                  "security":[
                    {
                  "Bearer":[]
                     }
          ],
                  "parameters":[{
                    "name":"body",
                    "in":"body",
                    "description":" discussion details",
                    "required":"true",
                    "schema":{
                        "type":"object",
                        "properties":{
                          "title": {
                            "type": "string",
                            "description": "The title of the discussion",
                            "example": "New Discussion Title",
                            "required": true
                          },
                          "content": {
                            "type": "string",
                            "description": "The content of the discussion",
                            "example": "Discussion content goes here",
                            "required": true
                          },
                          "author": {
                            "type": "string",
                            "description": "The ObjectId of the user who created the discussion",
                            "example": "609879f16836050e184a0db3",
                            "required": true
                          }
                  }}
                }],
                "responses":{
                  "201": {
                      "description":  "discussion created"
                    },
                    "403": {
                      "description": "An  discussion with this email already exists."
                    },
                    "500": {
                      "description": "There was an error processing your request. Please try again later."
                    } 
              }
                }},
                "/api/disc/createReply/{id}":{
                  "post":{
                    "summary": "Create a new Reply to discussion",
                    "description":"Create a new Reply to discussion and add it to the database",
                    "tags":[" Discussions"],
                    "security":[
                      {
                    "Bearer":[]
                       }
            ],
                    "parameters":[{
                      "name":"id",
                      "in":"path",
                      "description":"ID of the Discussion to update",
                      "required":"true",
                      "type":"string"
                      },
                      {
                      "name":"body",
                      "in":"body",
                      "description":" Reply  details",
                      "required":"true",
                      "schema":{
                          "type":"object",
                          "properties":{
                            "title": {
                              "type": "string",
                              "description": "The title of the discussion",
                              "example": "New Discussion Title",
                              "required": true
                            },
                            "content": {
                              "type": "string",
                              "description": "The content of the discussion",
                              "example": "Discussion content goes here",
                              "required": true
                            },
                            "author": {
                              "type": "string",
                              "description": "The ObjectId of the user who created the discussion",
                              "example": "609879f16836050e184a0db3",
                              "required": true
                            }
                    }}
                  }],
                  "responses":{
                    "201": {
                        "description":  "Reply to discussion created"
                      },
                      "403": {
                        "description": "An Reply to discussion with this email already exists."
                      },
                      "500": {
                        "description": "There was an error processing your request. Please try again later."
                      } 
                }
                  }},
                "/api/disc/put/{id}":{
                  "put":{
                    "summary": "Update a new Discussion",
                    "description":"Update a new Discussion and add it to the database",
                    "tags":[" Discussions"],
                    "security":[
                      {
                    "Bearer":[]
                       }
            ],
                    "parameters":[{
                      "name":"id",
                      "in":"path",
                      "description":"ID of the Discussion to update",
                      "required":"true",
                      "type":"string"
                      },
                      {
                          "name": "body",
                          "in": "body",
                          "description": "Announcement details",
                          "required": true,
                          "schema": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title of the discussion",
                                "example": "New Discussion Title",
                                "required": true
                              },
                              "content": {
                                "type": "string",
                                "description": "The content of the discussion",
                                "example": "Discussion content goes here",
                                "required": true
                              },
                              "author": {
                                "type": "string",
                                "description": "The ObjectId of the user who created the discussion",
                                "example": "609879f16836050e184a0db3",
                                "required": true
                              }
                                 
                            }
                          }
                        }
                   ],
                  "responses":{
                    "201": {
                        "description": "Discussion Updated"
                      },
                      "403": {
                        "description": "A Discussion with this email already exists."
                      },
                      "500": {
                        "description": "There was an error processing your request. Please try again later."
                      } 
                }
                  }},
                  "/api/disc/delete/{id}":{
                    "delete":{
                      "summary": "Delete a discussion by ID",
                      "description": "Delete a discussion by ID",
                      "tags": [" Discussions"],
                      "security":[
                        {
                      "Bearer":[]
                         }
              ],
                      "parameters": [
                        {
                          "name": "id",
                          "in": "path",
                          "description": "ID of the discussion to be delete",
                          "required": true,
                          "type": "string"
                        }
                      ],
                      "responses": {
                        "204": {
                          "description": "discussion deleted"
                        },
                        "404": {
                          "description": "User not found"
                        }}
                    }},
                    "/api/disc/getOne/{id}":{
                    "get":{
                      "summary": "Get a discussion by ID",
                      "description": "Get an discussion by ID",
                      "tags": [" Discussions"],
                      "security":[
                        {
                      "Bearer":[]
                         }
              ],
                      "parameters": [
                        {
                          "name": "id",
                          "in": "path",
                          "description": "ID of the discussion to retrieve",
                          "required": true,
                          "type": "string"
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response"
                        },
                        "404": {
                          "description": "Course not found"
                        }
                      }
                  }},
                  "/api/disc/all":{
                    "get":{
                        "summary":"Get all discussions",
                        "description":"All discussions",
                        "tags":[" Discussions"],
                        "security":[
                          {
                        "Bearer":[]
                           }
                ],
                        "responses":{
                            "200":{
                                "description":"A list of all discussions"
                            },
                            "400":{
                                "description":"OPPS......Something went wrong"
                            }  
                        }
                   }},

                   "/api/grade/createGradeQuiz":{
                    "post":{
                      "summary": "Create a new grade of quiz",
                      "description":"Create a new grade of quiz and add it to the database",
                      "tags":[" Grades"],
                      "security":[
                        {
                      "Bearer":[]
                         }
              ],
                      "parameters":[{
                        "name":"body",
                        "in":"body",
                        "description":" grade of quiz details",
                        "required":"true",
                        "schema":{
                            "type":"object",
                            "properties":{
                              
                            
                              "quizId": {
                                "type": "string",
                                "description": "The ObjectId of the quiz to which the grade belongs",
                                "example": "609879f16836050e184a0db3"
                              },
                              "grade": {
                                "type": "number",
                                "description": "The grade value",
                                "example": 95,
                                "required": true
                              },
                              "graded_by": {
                                "type": "string",
                                "description": "The ObjectId of the user who graded the assignment/quiz",
                                "example": "609879f16836050e184a0db3",
                                "required": true
                              
                                  }
                                                              
                            
                        
                      }}
                    }],
                    "responses":{
                      "201": {
                          "description":  "grade of quiz created"
                        },
                        "403": {
                          "description": "An  grade of quiz with this email already exists."
                        },
                        "500": {
                          "description": "There was an error processing your request. Please try again later."
                        } 
                  }
                    }},
                    "/api/grade/createGradeAssig":{
                      "post":{
                        "summary": "Create a new grade of assignment",
                        "description":"Create a new grade of assignment and add it to the database",
                        "tags":[" Grades"],
                        "security":[
                          {
                        "Bearer":[]
                           }
                ],
                        "parameters":[{
                          "name":"body",
                          "in":"body",
                          "description":" grade of assignment details",
                          "required":"true",
                          "schema":{
                              "type":"object",
                              "properties":{
                                
                                "assignmentId": {
                                  "type": "string",
                                  "description": "The ObjectId of the assignment to which the grade belongs",
                                  "example": "609879f16836050e184a0db3"
                                },
                               
                                "grade": {
                                  "type": "number",
                                  "description": "The grade value",
                                  "example": 95,
                                  "required": true
                                },
                                "graded_by": {
                                  "type": "string",
                                  "description": "The ObjectId of the user who graded the assignment/quiz",
                                  "example": "609879f16836050e184a0db3",
                                  "required": true
                                
                                    }
                                                                
                              
                          
                        }}
                      }],
                      "responses":{
                        "201": {
                            "description":  "grade of assignment  created"
                          },
                          "403": {
                            "description": "An  grade of assignment with this email already exists."
                          },
                          "500": {
                            "description": "There was an error processing your request. Please try again later."
                          } 
                    }
                      }},
                      "/api/grade/delete/{id}":{
                        "delete":{
                          "summary": "Delete a grade by ID",
                          "description": "Delete a grade by ID",
                          "tags": [" Grades"],
                          "security":[
                            {
                          "Bearer":[]
                             }
                  ],
                          "parameters": [
                            {
                              "name": "id",
                              "in": "path",
                              "description": "ID of the grade to be delete",
                              "required": true,
                              "type": "string"
                            }
                          ],
                          "responses": {
                            "204": {
                              "description": "grade deleted"
                            },
                            "404": {
                              "description": "User not found"
                            }}
                        }},
                        "/api/grade/all":{
                          "get":{
                              "summary":"Get all grades",
                              "description":"All grades",
                              "tags":[" Grades"],
                              "security":[
                                {
                              "Bearer":[]
                                 }
                      ],
                              "responses":{
                                  "200":{
                                      "description":"A list of all grades"
                                  },
                                  "400":{
                                      "description":"OPPS......Something went wrong"
                                  }  
                              }
                         }},
                         "/api/grade/getOne/{id}":{
                          "get":{
                            "summary": "Get a grade by ID",
                            "description": "Get an  grade by ID",
                            "tags": [" Grades"],
                            "security":[
                              {
                            "Bearer":[]
                               }
                    ],
                            "parameters": [
                              {
                                "name": "id",
                                "in": "path",
                                "description": "ID of the  grade to retrieve",
                                "required": true,
                                "type": "string"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful response"
                              },
                              "404": {
                                "description": " grade not found"
                              }
                            }
                        }},
                        "/api/grade/put/{id}":{
                          "put":{
                            "summary": "Update a new grade",
                            "description":"Update a new grade and add it to the database",
                            "tags":[" Grades"],
                            "security":[
                              {
                            "Bearer":[]
                               }
                    ],
                            "parameters":[{
                              "name":"id",
                              "in":"path",
                              "description":"ID of the grade to update",
                              "required":"true",
                              "type":"string"
                              },
                              {
                                  "name": "body",
                                  "in": "body",
                                  "description": "grade details",
                                  "required": true,
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "course": {
                                        "type": "string",
                                        "description": "The ObjectId of the course to which the grade belongs",
                                        "example": "609879f16836050e184a0db3",
                                        "required": true
                                      },
                                      "assignmentId": {
                                        "type": "string",
                                        "description": "The ObjectId of the assignment to which the grade belongs",
                                        "example": "609879f16836050e184a0db3"
                                      },
                                      "quizId": {
                                        "type": "string",
                                        "description": "The ObjectId of the quiz to which the grade belongs",
                                        "example": "609879f16836050e184a0db3"
                                      },
                                      "grade": {
                                        "type": "number",
                                        "description": "The grade value",
                                        "example": 95,
                                        "required": true
                                      },
                                      "graded_by": {
                                        "type": "string",
                                        "description": "The ObjectId of the user who graded the assignment/quiz",
                                        "example": "609879f16836050e184a0db3",
                                        "required": true
                                      
                                          }
                                         
                                    }
                                  }
                                }
                           ],
                          "responses":{
                            "201": {
                                "description": "grade Updated"
                              },
                              "403": {
                                "description": "A grade with this email already exists."
                              },
                              "500": {
                                "description": "There was an error processing your request. Please try again later."
                              } 
                        }
                          }},

                          "/api/sub/createQuiz":{
                            "post":{
                              "summary": "Create a new Submission",
                              "description":"Create a new Submission and add it to the database",
                              "tags":["Submissions"],
                              "consumes": ["multipart/form-data"],
                              "security":[
                                {
                              "Bearer":[]
                                 }
                      ],
                      "parameters": [
                        {
                          "name": "quizId",
                          "in": "formData",
                          "type": "string",
                          "description": "The ObjectId of the quiz to which the submission belongs",
                          "example": "609879f16836050e184a0db3",
                          "required": true
                        },
                        {
                          "name": "user",
                          "in": "formData",
                          "type": "string",
                          "description": "The ObjectId of the user who submitted the assignment/quiz",
                          "example": "609879f16836050e184a0db3",
                          "required": true
                        },
                        {
                          "name": "files",
                            "in": "formData",
                            "description": "Array of attached files",
                            "type": "file",
                          "required": true
                        }
                      ],
                            "responses":{
                              "201": {
                                  "description":  "Submission of quiz created"
                                },
                               
                                "500": {
                                  "description": "There was an error processing your request. Please try again later."
                                } 
                          }
                            }},
                            "/api/sub/createAssign":{
                              "post":{
                                "summary": "Create a new Submission",
                                "description":"Create a new Submission and add it to the database",
                                "tags":["Submissions"],
                                "consumes": ["multipart/form-data"],
                                "security":[
                                  {
                                "Bearer":[]
                                   }
                        ],
                        "parameters": [
                          {
                            "name": "assignmentId",
                            "in": "formData",
                            "type": "string",
                            "description": "The ObjectId of the assignment to which the submission belongs",
                            "example": "609879f16836050e184a0db3",
                            "required": true
                          },
                          {
                            "name": "user",
                            "in": "formData",
                            "type": "string",
                            "description": "The ObjectId of the user who submitted the assignment/quiz",
                            "example": "609879f16836050e184a0db3",
                            "required": true
                          },
                          {
                            "name": "files",
                            "in": "formData",
                            "type": "file",
                            "description": "Array of attached files"
                          }
                        ],
                              "responses":{
                                "201": {
                                    "description":  "Submission of quiz created"
                                  },
                                 
                                  "500": {
                                    "description": "There was an error processing your request. Please try again later."
                                  } 
                            }
                              }},
                            "/api/sub/put/{id}":{
                              "put":{
                                "summary": "Update a new Submission",
                                "description":"Update a new Submission and add it to the database",
                                "tags":["Submissions"],
                                "consumes": ["multipart/form-data"],
                                "security":[
                                  {
                                "Bearer":[]
                                   }
                        ],
                        "parameters": [
                          {
                            "name": "id",
                            "in": "path",
                            "description": "ID of the Submission to update",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "assignmentId",
                            "in": "formData",
                            "description": "The ObjectId of the assignment to which the submission belongs",
                            "type": "string",
                            "example": "609879f16836050e184a0db3",
                            "required": true
                          },
                          {
                            "name": "quizId",
                            "in": "formData",
                            "description": "The ObjectId of the quiz to which the submission belongs",
                            "type": "string",
                            "example": "609879f16836050e184a0db3",
                            "required": true
                          },
                          {
                            "name": "user",
                            "in": "formData",
                            "description": "The ObjectId of the user who submitted the assignment/quiz",
                            "type": "string",
                            "example": "609879f16836050e184a0db3",
                            "required": true
                          },
                          {
                            "name": "files",
                            "in": "formData",
                            "description": "Array of attached files",
                            "type": "array",
                            "items": {
                              "type": "file",
                              "format": "binary",
                              "description": "Binary data of the file"
                            },
                            "required": true
                          }
                        ],
                              "responses":{
                                "201": {
                                    "description": "Submission Updated"
                                  },
                                  "403": {
                                    "description": "A Submission with this email already exists."
                                  },
                                  "500": {
                                    "description": "There was an error processing your request. Please try again later."
                                  } 
                            }
                              }},
                              "/api/sub/all":{
                                "get":{
                                    "summary":"Get all Submissions",
                                    "description":"All Submissions",
                                    "tags":["Submissions"],
                                    "security":[
                                      {
                                    "Bearer":[]
                                       }
                            ],
                                    "responses":{
                                        "200":{
                                            "description":"A list of all Submissions"
                                        },
                                        "400":{
                                            "description":"OPPS......Something went wrong"
                                        }  
                                    }
                    
                               }},
                               "/api/sub/getOne/{id}":{
                                "get":{
                                    "summary": "Get a Submission by ID",
                                    "description": "Get a Submission by ID",
                                    "tags": ["Submissions"],
                                    "security":[
                                      {
                                    "Bearer":[]
                                       }
                            ],
                                    "parameters": [
                                      {
                                        "name": "id",
                                        "in": "path",
                                        "description": "ID of the Submission to retrieve",
                                        "required": true,
                                        "type": "string"
                                      }
                                    ],
                                    "responses": {
                                      "200": {
                                        "description": "Successful response"
                                      },
                                      "404": {
                                        "description": "Submission not found"
                                      }
                                    }
                                }},
                                "/api/sub/delete/{id}":{
                                "delete":{
                                  "summary": "Delete asubmission by ID",
                                  "description": "Delete a asubmission by ID",
                                  "tags": ["Submissions"],
                                  "security":[
                                    {
                                  "Bearer":[]
                                     }
                          ],
                                  "parameters": [
                                    {
                                      "name": "id",
                                      "in": "path",
                                      "description": "ID of the submission to be delete",
                                      "required": true,
                                      "type": "string"
                                    }
                                  ],
                                  "responses": {
                                    "204": {
                                      "description": "submission deleted"
                                    },
                                    "404": {
                                      "description": "submission not found"
                                    }
                                  }
                                }},

                                "/api/quiz/create":{
                                  "post":{
                                    "summary": "Create a new Quiz",
                                    "description":"Create a new Quiz and add it to the database",
                                    "tags":["Quizs"],
                                    "consumes": ["multipart/form-data"],
                                    "security":[
                                      {
                                    "Bearer":[]
                                       }
                            ],
                            "parameters": [
                              {
                                "name": "userId",
                                "in": "formData",
                                "description": "The ObjectId of the user who created the quiz",
                                "type": "string",
                                "required": true
                              },
                              {
                                "name": "title",
                                "in": "formData",
                                "description": "The title of the quiz",
                                "type": "string",
                                "required": true
                              },
                              {
                                "name": "description",
                                "in": "formData",
                                "description": "The description of the quiz",
                                "type": "string",
                                "required": true
                              },
                              {
                                "name": "course",
                                "in": "formData",
                                "description": "The ObjectId of the course to which the quiz belongs",
                                "type": "string",
                                "required": true
                              },
                              {
                                "name": "files",
                                "in": "formData",
                                "description": "Array of attached files",
                                "type": "file",
                              "required": true
                              },
                              {
                                "name": "due_date",
                                "in": "formData",
                                "description": "The due date of the quiz",
                                "type": "string",
                                "format": "date-time",
                                "required": true
                              }
                            ],
                                  "responses":{
                                    "201": {
                                        "description":  "Quiz was created"
                                      },
                                      
                                      "500": {
                                        "description": "There was an error processing your request. Please try again later."
                                      } 
                                }
                                  }},
                                  "/api/quiz/put/{id}":{
                                    "put":{
                                      "summary": "Update a new Quiz",
                                      "description":"Update a new Quiz and add it to the database",
                                      "tags":["Quizs"],
                                      "consumes": ["multipart/form-data"],
                                      "security":[
                                        {
                                      "Bearer":[]
                                         }
                              ],
                              "parameters": [
                                {
                                  "name": "id",
                                  "in": "path",
                                  "description": "ID of the Quiz to update",
                                  "required": true,
                                  "type": "string"
                                },
                                {
                                  "name": "userId",
                                  "in": "formData",
                                  "type": "string",
                                  "description": "The ObjectId of the user who created the quiz",
                                  "example": "609879f16836050e184a0db3",
                                  "required": true
                                },
                                {
                                  "name": "title",
                                  "in": "formData",
                                  "type": "string",
                                  "description": "The title of the quiz",
                                  "example": "Quiz 1",
                                  "required": true
                                },
                                {
                                  "name": "description",
                                  "in": "formData",
                                  "type": "string",
                                  "description": "The description of the quiz",
                                  "example": "Description of Quiz 1",
                                  "required": true
                                },
                                {
                                  "name": "grade",
                                  "in": "formData",
                                  "type": "string",
                                  "description": "The grade of the quiz",
                                  "example": "A"
                                },
                                {
                                  "name": "course",
                                  "in": "formData",
                                  "type": "string",
                                  "description": "The ObjectId of the course to which the quiz belongs",
                                  "example": "609879f16836050e184a0db3",
                                  "required": true
                                },
                                {
                                  "name": "file",
                                  "in": "formData",
                                  "type": "file",
                                  "description": "Array of attached files"
                                },
                                {
                                  "name": "due_date",
                                  "in": "formData",
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The due date of the quiz",
                                  "example": "2024-05-10T00:00:00Z",
                                  "required": true
                                }
                              ],
                                    "responses":{
                                      "201": {
                                          "description": "Quiz Updated"
                                        },
                                       
                                        "500": {
                                          "description": "There was an error processing your request. Please try again later."
                                        } 
                                  }
                                    }},
                                    "/api/quiz/all":{
                                      "get":{
                                          "summary":"Get all Quizs",
                                          "description":"All Quizs",
                                          "tags":["Quizs"],
                                          "security":[
                                            {
                                          "Bearer":[]
                                             }
                                  ],
                                          "responses":{
                                              "200":{
                                                  "description":"A list of all  Quizs"
                                              },
                                              "400":{
                                                  "description":"OPPS......Something went wrong"
                                              }  
                                          }
                          
                                     }},
                                     "/api/quiz/getOne/{id}":{
                                      "get":{
                                          "summary": "Get a Quiz by ID",
                                          "description": "Get a Quiz by ID",
                                          "tags": ["Quizs"],
                                          "security":[
                                            {
                                          "Bearer":[]
                                             }
                                  ],
                                          "parameters": [
                                            {
                                              "name": "id",
                                              "in": "path",
                                              "description": "ID of the Quiz to retrieve",
                                              "required": true,
                                              "type": "string"
                                            }
                                          ],
                                          "responses": {
                                            "200": {
                                              "description": "Successful response"
                                            },
                                            "404": {
                                              "description": "Quiz not found"
                                            }
                                          }
                                      }},
                                      "/api/quiz/delete/{id}":{
                                        "delete":{
                                          "summary": "Delete A Quiz by ID",
                                          "description": "Delete a Quiz by ID",
                                          "tags": ["Quizs"],
                                          "security":[
                                            {
                                          "Bearer":[]
                                             }
                                  ],
                                          "parameters": [
                                            {
                                              "name": "id",
                                              "in": "path",
                                              "description": "ID of the Quiz to be delete",
                                              "required": true,
                                              "type": "string"
                                            }
                                          ],
                                          "responses": {
                                            "204": {
                                              "description": "Quiz deleted"
                                            },
                                            "404": {
                                              "description": "Quiz not found"
                                            }
                                          }
                                        }},

                                        "/api/assign/create":{
                                          "post":{
                                            "summary": "Create a new Assignment",
                                            "description":"Create a new Assignment and add it to the database",
                                            "tags":["Assignments"],
                                            "consumes": ["multipart/form-data"],
                                            "security":[
                                              {
                                            "Bearer":[]
                                               }
                                                 ],
                                    
                                    "parameters": [
                                      {
                                        "name": "userId",
                                        "in": "formData",
                                        "description": "The ObjectId of the user who created the assignment",
                                        "type": "string",
                                        "required": true
                                      },
                                      {
                                        "name": "title",
                                        "in": "formData",
                                        "description": "The title of the assignment",
                                        "type": "string",
                                        "required": true
                                      },
                                      {
                                        "name": "description",
                                        "in": "formData",
                                        "description": "The description of the assignment",
                                        "type": "string"
                                      },
                                      {
                                        "name": "files",
                                        "in": "formData",
                                        "description": "Array of attached files",
                                        "type": "file",
                                      "required": true
                                      },
                                      {
                                        "name": "due_date",
                                        "in": "formData",
                                        "description": "The due date of the assignment",
                                        "type": "string",
                                        "format": "date-time",
                                        "required": true
                                      },
                                      {
                                        "name": "course",
                                        "in": "formData",
                                        "description": "The ObjectId of the course to which the assignment belongs",
                                        "type": "string"
                                      }
                                    ],
                                          "responses":{
                                            "201": {
                                                "description":  "Assignment was created"
                                              },
                                              
                                              "500": {
                                                "description": "There was an error processing your request. Please try again later."
                                              } 
                                        }
                                          }},
                                          "/api/assign/put/{id}":{
                                            "put":{
                                              "summary": "Update a new Assignment",
                                              "description":"Update a new Assignment and add it to the database",
                                              "tags":["Assignments"],
                                              "consumes": ["multipart/form-data"],
                                              "security":[
                                                {
                                              "Bearer":[]
                                                 }
                                      ],
                                      "parameters": [
                                        {
                                          "name": "id",
                                          "in": "path",
                                          "description": "ID of the Assignment to update",
                                          "required": true,
                                          "type": "string"
                                        },
                                        {
                                          "name": "userId",
                                          "in": "formData",
                                          "type": "string",
                                          "description": "The ObjectId of the user who created the assignment",
                                          "example": "609879f16836050e184a0db3",
                                          "required": true
                                        },
                                        {
                                          "name": "title",
                                          "in": "formData",
                                          "type": "string",
                                          "description": "The title of the assignment",
                                          "example": "Assignment 1",
                                          "required": true
                                        },
                                        {
                                          "name": "description",
                                          "in": "formData",
                                          "type": "string",
                                          "description": "The description of the assignment",
                                          "example": "Description of Assignment 1"
                                        },
                                        {
                                          "name": "file",
                                          "in": "formData",
                                          "type": "file",
                                          "description": "Array of attached files",
                                          "required": true
                                        },
                                        {
                                          "name": "grade",
                                          "in": "formData",
                                          "type": "string",
                                          "description": "The grade of the assignment"
                                        },
                                        {
                                          "name": "due_date",
                                          "in": "formData",
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The due date of the assignment",
                                          "example": "2024-05-10T00:00:00Z",
                                          "required": true
                                        },
                                        {
                                          "name": "course",
                                          "in": "formData",
                                          "type": "string",
                                          "description": "The ObjectId of the course to which the assignment belongs",
                                          "example": "609879f16836050e184a0db3"
                                        }
                                      ],
                                            "responses":{
                                              "201": {
                                                  "description": "Assignment Updated"
                                                },
                                               
                                                "500": {
                                                  "description": "There was an error processing your request. Please try again later."
                                                } 
                                          }
                                            }},
                                            "/api/assign/delete/{id}":{
                                              "delete":{
                                                "summary": "Delete Assignment by ID",
                                                "description": "Delete Assignment by ID",
                                                "tags": ["Assignments"],
                                                "security":[
                                                  {
                                                "Bearer":[]
                                                   }
                                        ],
                                                "parameters": [
                                                  {
                                                    "name": "id",
                                                    "in": "path",
                                                    "description": "ID of the Assignment to be delete",
                                                    "required": true,
                                                    "type": "string"
                                                  }
                                                ],
                                                "responses": {
                                                  "204": {
                                                    "description": "Assignment deleted"
                                                  },
                                                  "404": {
                                                    "description": "Assignment not found"
                                                  }
                                                }
                                              }},
                                              "/api/assign/getOne/{id}":{
                                                "get":{
                                                    "summary": "Get assignment by ID",
                                                    "description": "Get an assignment by ID",
                                                    "tags": ["Assignments"],
                                                    "security":[
                                                      {
                                                    "Bearer":[]
                                                       }
                                            ],
                                                    "parameters": [
                                                      {
                                                        "name": "id",
                                                        "in": "path",
                                                        "description": "ID of the assignment to retrieve",
                                                        "required": true,
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "responses": {
                                                      "200": {
                                                        "description": "Successful response"
                                                      },
                                                      "404": {
                                                        "description": "assignment not found"
                                                      }
                                                    }
                                                }},
                                                "/api/assign/all":{
                                                  "get":{
                                                      "summary":"Get all assignments",
                                                      "description":"All assignments",
                                                      "tags":["Assignments"],
                                                      "security":[
                                                        {
                                                      "Bearer":[]
                                                         }
                                              ],
                                                      "responses":{
                                                          "200":{
                                                              "description":"A list of all  asssignments"
                                                          },
                                                          "400":{
                                                              "description":"OPPS......Something went wrong"
                                                          }  
                                                      }
                                      
                                                 }},
                                          "/api/content/create":{
                                            "post":{
                                              "summary": "Create a new Content",
                                              "description":"Create a new Content and add it to the database",
                                              "tags":["Contents"],
                                              "consumes": ["multipart/form-data"],
                                              "security":[
                                                {
                                              "Bearer":[]
                                                 }
                                      ],
                                      "parameters": [
                                        {
                                          "name": "userId",
                                          "in": "formData",
                                          "description": "The ObjectId of the user who created the content",
                                          "type": "string",
                                          "required": true
                                        },
                                        {
                                          "name": "course_id",
                                          "in": "formData",
                                          "description": "The ObjectId of the course to which the content belongs",
                                          "type": "string",
                                          "required": true
                                        },
                                        {
                                          "name": "type",
                                          "in": "formData",
                                          "description": "The type of the content",
                                          "type": "string",
                                          "required": true
                                        },
                                        {
                                          "name": "title",
                                          "in": "formData",
                                          "description": "The title of the content",
                                          "type": "string"
                                        },
                                        {
                                          "name": "description",
                                          "in": "formData",
                                          "description": "The description of the content",
                                          "type": "string"
                                        },
                                        {
                                          "name": "files",
                                          "in": "formData",
                                          "description": "Array of attached files",
                                          "type": "file",
                                        "required": true
                                        },
                                        {
                                          "name": "order",
                                          "in": "formData",
                                          "description": "The order of the content within the course",
                                          "type": "integer"
                                        }
                                      ],
                                            "responses":{
                                              "201": {
                                                  "description":  "Content was created"
                                                },
                                                
                                                "500": {
                                                  "description": "There was an error processing your request. Please try again later."
                                                } 
                                          }
                                            }},
                                            "/api/content/update/{id}":{
                                              "put":{
                                                "summary": "Update a new Content",
                                                "description":"Update a new Content and add it to the database",
                                                "tags":["Contents"],
                                                "consumes": ["multipart/form-data"],
                                                "security":[
                                                  {
                                                "Bearer":[]
                                                   }
                                        ],
                                        "parameters": [
                                          {
                                            "name": "id",
                                            "in": "path",
                                            "description": "ID of the Content to update",
                                            "required": true,
                                            "type": "string"
                                          },
                                          {
                                            "name": "userId",
                                            "in": "formData",
                                            "type": "string",
                                            "description": "The ObjectId of the user who created the content",
                                            "example": "609879f16836050e184a0db3",
                                            "required": true
                                          },
                                          {
                                            "name": "course_id",
                                            "in": "formData",
                                            "type": "string",
                                            "description": "The ObjectId of the course to which the content belongs",
                                            "example": "609879f16836050e184a0db3",
                                            "required": true
                                          },
                                          {
                                            "name": "type",
                                            "in": "formData",
                                            "type": "string",
                                            "description": "The type of the content",
                                            "example": "lecture",
                                            "required": true
                                          },
                                          {
                                            "name": "title",
                                            "in": "formData",
                                            "type": "string",
                                            "description": "The title of the content"
                                          },
                                          {
                                            "name": "description",
                                            "in": "formData",
                                            "type": "string",
                                            "description": "The description of the content"
                                          },
                                          {
                                            "name": "file",
                                            "in": "formData",
                                            "type": "file",
                                            "description": "Array of file paths",
                                            "required": true
                                          },
                                          {
                                            "name": "order",
                                            "in": "formData",
                                            "type": "integer",
                                            "description": "The order of the content within the course"
                                          }
                                        ],
                                              "responses":{
                                                "201": {
                                                    "description": "Content Updated"
                                                  },
                                                 
                                                  "500": {
                                                    "description": "There was an error processing your request. Please try again later."
                                                  } 
                                            }
                                              }},
                                              "/api/content/delete/{id}":{
                                                "delete":{
                                                  "summary": "Delete Content by ID",
                                                  "description": "Delete Content by ID",
                                                  "tags": ["Contents"],
                                                  "security":[
                                                    {
                                                  "Bearer":[]
                                                     }
                                          ],
                                                  "parameters": [
                                                    {
                                                      "name": "id",
                                                      "in": "path",
                                                      "description": "ID of the Content to be delete",
                                                      "required": true,
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "responses": {
                                                    "204": {
                                                      "description": "Content deleted"
                                                    },
                                                    "404": {
                                                      "description": "Content not found"
                                                    }
                                                  }
                                                }},
                                                "/api/content/getone/{id}":{
                                                  "get":{
                                                      "summary": "Get a Content by ID",
                                                      "description": "Get a Content by ID",
                                                      "tags": ["Contents"],
                                                      "security":[
                                                        {
                                                      "Bearer":[]
                                                         }
                                              ],
                                                      "parameters": [
                                                        {
                                                          "name": "id",
                                                          "in": "path",
                                                          "description": "ID of the Content to retrieve",
                                                          "required": true,
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "responses": {
                                                        "200": {
                                                          "description": "Successful response"
                                                        },
                                                        "404": {
                                                          "description": "Content not found"
                                                        }
                                                      }
                                                  }},
                                                  "/api/content/all":{
                                                    "get":{
                                                        "summary":"Get all contents",
                                                        "description":"All contents",
                                                        "tags":["Contents"],
                                                        "security":[
                                                          {
                                                        "Bearer":[]
                                                           }
                                                ],
                                                        "responses":{
                                                            "200":{
                                                                "description":"A list of all  contents"
                                                            },
                                                            "400":{
                                                                "description":"OPPS......Something went wrong"
                                                            }  
                                                        }
                                        
                                                   }}

}
  }
    
